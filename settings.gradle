pluginRepositories {
  // pick up gradle plugin from local maven repo
  maven {
    url "file://" + System.getProperty("user.home") + "/.m2/repository"
  }
  gradlePluginPortal()
}

rootProject.name = theName

Map<String, String> modules = [
    'epigraph-builtin-types-schema': 'builtin-types-schema',
    'epigraph-core'                : 'core',
    'epigraph-data-schema'         : 'data-schema',
    'epigraph-gradle-plugin'       : 'epigraph-gradle-plugin',
//    'idea-plugin'                  : 'idea-plugin',
    'epigraph-light-psi'           : 'epigraph-light-psi',
    'epigraph-maven-plugin'        : 'maven-plugin',
    'epigraph-projections-schema'  : 'projections-schema',
    'epigraph-scala-codegen'       : 'scala-codegen',
    'epigraph-scala-maven-plugin'  : 'scala-maven-plugin',
    'epigraph-schema-schema'       : 'schema-schema',
    'epigraph-schema-compiler'     : 'schema-compiler',
    'epigraph-java-core'           : 'java/core',
    'epigraph-java-codegen'        : 'java/codegen',
//    'epigraph-java-projections'    : 'java/projections',
    'epigraph-schema-parser'       : 'schema-parser',
    'users-schema'                 : 'examples/users-example/users-schema'
]

// uncomment to build and publish gradle and maven plugins for the first time
//modules = [
//    'epigraph-core'                : 'core',
//    'epigraph-gradle-plugin'       : 'epigraph-gradle-plugin',
//    'epigraph-light-psi'           : 'epigraph-light-psi',
//    'epigraph-maven-plugin'        : 'maven-plugin',
//    'epigraph-schema-compiler'     : 'schema-compiler',
//    'epigraph-schema-parser'       : 'schema-parser'
//]

modules.each { name, dir ->
  include name
  project(":$name").projectDir = file(dir)
}
