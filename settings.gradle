pluginRepositories {
  // pick up gradle plugin from local maven repo
  maven {
    url "file://" + System.getProperty("user.home") + "/.m2/repository"
  }
  gradlePluginPortal()
}

rootProject.name = theName

// map from module (sub-project) path to full module name (maven artifact id)
Map<String, String> modules = [
    'builtin-types-schema'                 : 'epigraph-builtin-types-schema',
    'core'                                 : 'epigraph-core',
    'data-schema'                          : 'epigraph-data-schema',
    'examples/users/schema'                : 'examples-users-schema',
    'examples/users/schema-java'           : 'examples-users-schema-java',
//  'examples/users/schema-scala'          : 'examples-users-schema-scala',
//  'examples/users/service'               : 'examples-users-service',
    'gradle-plugins/gradle-plugins-common' : 'epigraph-gradle-plugins-common',
    'gradle-plugins/java-plugin'           : 'epigraph-java-gradle-plugin',
    'gradle-plugins/schema-compiler-plugin': 'epigraph-schema-compiler-gradle-plugin',
    'idea-plugin'                          : 'idea-plugin',
    'idl-parser'                           : 'epigraph-idl-parser',
    'java/codegen'                         : 'epigraph-java-codegen',
    'java/core'                            : 'epigraph-java-core',
    'java/projections'                     : 'epigraph-java-projections',
    'java/util'                            : 'epigraph-java-util',
    'lang-common'                          : 'epigraph-lang-common',
    'light-psi'                            : 'epigraph-light-psi',
    'maven-plugin'                         : 'epigraph-maven-plugin',
    'operations-schema'                    : 'epigraph-operations-schema',
    'projections-schema'                   : 'epigraph-projections-schema',
    'scala-codegen'                        : 'epigraph-scala-codegen',
    'scala-maven-plugin'                   : 'epigraph-scala-maven-plugin',
    'schema-compiler'                      : 'epigraph-schema-compiler',
    'schema-parser'                        : 'epigraph-schema-parser',
    'schema-schema'                        : 'epigraph-schema-schema',
    'standalone-psi-util'                  : 'epigraph-standalone-psi-util'
]

modules.each { dir, name ->
  include name
  project(":$name").projectDir = file(dir)
}
