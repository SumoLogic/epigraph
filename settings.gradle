pluginRepositories {
  // pick up gradle plugin from local maven repo
  maven {
    url "file://" + System.getProperty("user.home") + "/.m2/repository"
  }
  gradlePluginPortal()
}

rootProject.name = epigraphName

/*
 * Copyright 2017 Sumo Logic
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// map from module (sub-project) path to full module name (maven artifact id)
Map<String, String> modules = [
    'examples/library/library-schema'     : 'examples-library-schema',
    'examples/library/library-service'    : 'examples-library-service',
    'examples/sumo-schema'                : 'examples-sumo-schema',
    'examples/sumo-schema-java'           : 'examples-sumo-schema-java',
    'examples/users/schema'               : 'examples-users-schema',
    'examples/users/schema-java'          : 'examples-users-schema-java',
//  'examples/users/schema-scala'         : 'examples-users-schema-scala',
//  'examples/users/service'              : 'examples-users-service',
    'gradle-plugin'                       : 'epigraph-gradle-plugin',
    'gradle-plugin-common'                : 'epigraph-gradle-plugin-common',
    'idea-plugin'                         : 'idea-plugin',

    'builtin-services/builtin-services-schema'   : 'epigraph-builtin-services-schema',
    'builtin-services/builtin-services-service'  : 'epigraph-builtin-services-service',

    'compiler'                            : 'epigraph-compiler',
    'java/codegen'                        : 'epigraph-java-codegen',
    'java/core'                           : 'epigraph-java-core',
    'java/gdata'                          : 'epigraph-java-gdata',
    'java/gdata-schema-psi-parser'        : 'epigraph-java-gdata-schema-psi-parser',
    'java/gradle-plugin'                  : 'epigraph-java-gradle-plugin',
    'java/http-server-common'             : 'epigraph-java-http-server-common',
    'java/http-server-undertow'           : 'epigraph-java-http-server-undertow',
    'java/lang-common'                    : 'epigraph-java-lang-common',
    'java/maven-plugin'                   : 'epigraph-java-maven-plugin',
    'java/projections'                    : 'epigraph-java-projections',
    'java/projections-schema-psi-parser'  : 'epigraph-java-projections-schema-psi-parser',
    'java/projections-psi-parser-util'    : 'epigraph-java-projections-psi-parser-util',
    'java/projections-url-psi-parser'     : 'epigraph-java-projections-url-psi-parser',
    'java/schema'                         : 'epigraph-java-schema',
    'java/schema-parser'                  : 'epigraph-java-schema-parser',
    'java/schema-psi-parser'              : 'epigraph-java-schema-psi-parser',
    'java/schema-psi-parser-common'       : 'epigraph-java-schema-psi-parser-common',
    'java/service'                        : 'epigraph-java-service',
    'java/standalone-psi-util'            : 'epigraph-java-standalone-psi-util',
    'java/test-util'                      : 'epigraph-java-test-util',
    'java/request-url'                    : 'epigraph-java-request-url',
    'java/request-url-parser'             : 'epigraph-java-request-url-parser',
    'java/request-url-psi-parser'         : 'epigraph-java-request-url-psi-parser',
    'java/util'                           : 'epigraph-java-util',
    'java/wire/common'                    : 'epigraph-java-wire-common',
    'java/wire/json'                      : 'epigraph-java-wire-json',

    'light-psi'                           : 'epigraph-light-psi',
    'maven-plugin'                        : 'epigraph-maven-plugin',
    'maven-plugin-common'                 : 'epigraph-maven-plugin-common',
    'scala/codegen'                       : 'epigraph-scala-codegen',
    'scala/core'                          : 'epigraph-scala-core',
    'scala/maven-plugin'                  : 'epigraph-scala-maven-plugin',

    'schemas/builtin-types-schema'        : 'epigraph-builtin-types-schema',
    'schemas/data-schema'                 : 'epigraph-data-schema',
    'schemas/operations-schema'           : 'epigraph-operations-schema',
    'schemas/projections-schema'          : 'epigraph-projections-schema',
    'schemas/schema-schema'               : 'epigraph-schema-schema',

    'tests/schema'                        : 'tests-schema',
    'tests/schema-java'                   : 'tests-schema-java'
]

modules.each { dir, name ->
  include name
  project(":$name").projectDir = file(dir)
}
