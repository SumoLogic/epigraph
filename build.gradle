plugins {
  id 'nebula.dependency-recommender' version '3.6.3'
  id 'nebula.maven-publish' version '4.9.1'
}

allprojects {
  apply plugin: 'idea'
  apply plugin: 'nebula.dependency-recommender'
  // https://github.com/nebula-plugins/nebula-dependency-recommender-plugin/issues/9
  apply plugin: 'nebula.maven-publish'

  group = theGroup
  version = theVersion

  dependencyRecommendations {
    mavenBom file: file("$rootDir/pom.xml")
  }
}

subprojects {
  repositories {
    mavenCentral()
    jcenter()
  }

  tasks.withType(JavaCompile) {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xdiags:verbose"
  }

  tasks.withType(ScalaCompile) {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    ScalaCompileOptions.metaClass.daemonServer = true
    ScalaCompileOptions.metaClass.fork = true
    ScalaCompileOptions.metaClass.useAnt = false
    ScalaCompileOptions.metaClass.useCompileDaemon = false

    options.encoding = 'UTF-8'
    scalaCompileOptions.deprecation = true
    scalaCompileOptions.unchecked = true

    scalaCompileOptions.additionalParameters = ["-explaintypes"]
  }
}

// importing gradle project from IDEA is preferred to using 'gradle idea'
idea {
  project {
    jdkName = javaVersion
    languageLevel = javaVersion
    vcs = 'Git'
  }
}

// bootstrap: gradle -c settings-bootstrap.gradle publishGradlePlugins
task publishGradlePlugins(dependsOn: [
    ':epigraph-compiler:publishToMavenLocal',
    ':epigraph-gradle-plugin:publishToMavenLocal',
    ':epigraph-gradle-plugin-common:publishToMavenLocal',
    ':epigraph-java-schema-parser:publishToMavenLocal',
    ':epigraph-java-codegen:publishToMavenLocal',
    ':epigraph-java-gradle-plugin:publishToMavenLocal',
    ':epigraph-java-lang-common:publishToMavenLocal',
    ':epigraph-java-util:publishToMavenLocal',
    ':epigraph-light-psi:publishToMavenLocal',
    ':epigraph-scala-core:publishToMavenLocal'
]) {
  description 'Bootstraps gradle build by installing necessary plugins. Usage: \n gradle -c settings-bootstrap.gradle publishGradlePlugins'
}

