namespace ws.epigraph.services

import epigraph.schema.Type
import epigraph.schema.TypeName
import epigraph.schema.QualifiedTypeName
import epigraph.schema.AnonListTypeName
import epigraph.schema.DataTypeName
import epigraph.schema.AnonMapTypeName
import epigraph.schema.VarType
import epigraph.schema.DatumType
import epigraph.schema.DataType
import epigraph.schema.Tag

record Epigraph {
  doc = "Epigraph built-in services resource root type"

  types: map[TypeName, Type]
}

resource epigraph: Epigraph {

  outputProjection typeNameProjection : TypeName = ( `string` ) ~ (
    QualifiedTypeName ( segments ),
    AnonListTypeName ( elementTypeName $dataTypeNameProjection ),
    AnonMapTypeName (
      keyTypeName $typeNameProjection,
      valueTypeName $dataTypeNameProjection
    )
  )

  outputProjection dataTypeNameProjection : DataTypeName = (
    typeName $typeNameProjection,
    retroTagName ( `string` )
  )

  outputProjection typeProjection : Type = (
    name $typeNameProjection,
    supertypes * $typeProjection,
    `abstract`
  ) ~ (
    VarType ( tags * $tagProjection ),
    DatumType (
      // todo meta, tails
    )
  )

  outputProjection tagProjection: Tag = (
    name ( `string` ),
    type $typeProjection
  )

  outputProjection dataTypeProjection : DataType = (
    type $typeProjection,
    `retro` $tagProjection
  )

  read {
    outputProjection (
      types [] ( $typeProjection )
    )
  }
}
