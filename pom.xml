<!--
  ~ Copyright 2017 Sumo Logic
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ws.epigraph</groupId>
  <artifactId>epigraph</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <description>Epigraph project</description>
  <url>https://github.com/SumoLogic/epigraph</url>

  <!-- first-time build bootstrap:
      ./mvnw clean install -Plight-psi && ./mvnw clean test-compile
  -->
  <!-- IDEA project set-up:
    - Run: ./mvnw clean install -Plight-psi,main
    - File > Open... > Select project root folder
  -->

  <properties>

    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <maven-plugin-version>3.5</maven-plugin-version><!-- maven-plugin-plugin and related libs -->

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <revision>_-SNAPSHOT</revision><!-- keep in sync with bom/pom.xml -->

    <scala.compat.version>2.11</scala.compat.version>
    <scala.version>${scala.compat.version}.11</scala.version>

  </properties>

  <profiles>

    <profile>
      <id>main</id>
      <activation>
        <property>
          <name>!skipMain</name>
        </property>
      </activation>
      <modules><!-- please maintain alphabetical order (unless there's a reason - then provide it in a comment) -->
        <module>bom</module>
        <module>builtin-services</module>
        <module>compiler</module>
        <module>examples</module>
        <module>java</module>
        <module>maven-plugin</module>
        <module>maven-plugin-common</module>
        <module>scala</module>
        <module>scala/codegen-test</module>
        <module>schemas</module>
        <module>slf4test</module>
        <module>tests</module>
      </modules>
    </profile>

    <profile>
      <id>light-psi</id>
      <modules>
        <module>jar-mavenizer-plugin</module>
        <module>light-psi</module>
      </modules>
    </profile>

    <profile>
      <id>idea-plugin</id>
      <modules>
        <module>idea-plugin</module>
        <module>java/lang-common</module>
      </modules>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>

  <dependencyManagement><!-- sets version for shared child dependencies -->
    <dependencies><!-- maintain alphabetical order; blank line between different group ids -->

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.2.3</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.9.1</version>
      </dependency>

      <dependency>
        <groupId>com.io7m.jpplib</groupId>
        <artifactId>io7m-jpplib-core</artifactId>
        <version>0.7.4</version>
      </dependency>

      <dependency>
        <groupId>com.lihaoyi</groupId>
        <artifactId>pprint_${scala.compat.version}</artifactId>
        <version>0.4.4</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging_${scala.compat.version}</artifactId>
        <version>3.7.2</version>
      </dependency>

      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-core</artifactId>
        <version>1.4.20.Final</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>

      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>ST4</artifactId>
        <version>4.0.8</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpasyncclient</artifactId>
        <version>4.1.3</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.3</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore-nio</artifactId>
        <version>4.4.6</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-archiver</artifactId>
        <version>3.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-artifact</artifactId>
        <version>3.5.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>3.5.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-model</artifactId>
        <version>3.5.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>3.5.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugin-testing</groupId>
        <artifactId>maven-plugin-testing-harness</artifactId>
        <version>3.2.0</version><!-- 3.3.0 is broken: https://issues.apache.org/jira/browse/MPLUGINTESTING-35 -->
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${maven-plugin-version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>file-management</artifactId>
        <version>3.0.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>maven-shared-utils</artifactId>
        <version>3.2.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity</artifactId>
        <version>1.7</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-interpolation</artifactId>
        <version>1.24</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-rewrite</artifactId>
        <version>9.4.6.v20170531</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>9.4.6.v20170531</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>9.4.6.v20170531</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>15.0</version>
        <!-- typical scope: provided -->
      </dependency>

      <dependency>
        <groupId>org.pegdown</groupId>
        <artifactId>pegdown</artifactId>
        <version>1.6.0</version>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scalameta</groupId>
        <artifactId>scalameta_${scala.compat.version}</artifactId>
        <version>1.6.0</version>
      </dependency>
      <dependency>
        <groupId>org.scalameta</groupId>
        <artifactId>trees_${scala.compat.version}</artifactId>
        <version>1.6.0</version>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.compat.version}</artifactId>
        <version>3.2.0-SNAP7</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-nop</artifactId>
        <version>1.7.25</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.25</version>
      </dependency>

      <dependency>
        <groupId>org.slf4s</groupId>
        <artifactId>slf4s-api_${scala.compat.version}</artifactId>
        <version>1.7.25</version>
      </dependency>

      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-core</artifactId>
        <version>1.0-groovy-2.4</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <flattenMode>ossrh</flattenMode>
          <updatePomFile>true</updatePomFile>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
          <execution>
            <id>clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>

      <!--<plugin>-->
        <!--<groupId>se.eris</groupId>-->
        <!--<artifactId>notnull-instrumenter-maven-plugin</artifactId>-->
        <!--<version>0.6.6</version>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<goals>-->
              <!--<goal>instrument</goal>-->
              <!--<goal>tests-instrument</goal>-->
            <!--</goals>-->
          <!--</execution>-->
        <!--</executions>-->
        <!--<configuration>-->
          <!--<notNull>-->
            <!--<param>org.jetbrains.annotations.NotNull</param>-->
          <!--</notNull>-->
          <!--<nullable>-->
            <!--<param>org.jetbrains.annotations.Nullable</param>-->
          <!--</nullable>-->
        <!--</configuration>-->
      <!--</plugin>-->

    </plugins>

    <pluginManagement>

      <plugins>

        <plugin>
          <groupId>ws.epigraph</groupId>
          <artifactId>epigraph-maven-plugin</artifactId>
          <version>${revision}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>ws.epigraph</groupId>
          <artifactId>epigraph-java-maven-plugin</artifactId>
          <version>${revision}</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-sources</goal>
                <!--<goal>generate-test-sources</goal>-->
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!--<scalaVersion>${scala.version}</scalaVersion>-->
            <!--<scalaCompatVersion>${scala.compat.version}</scalaCompatVersion>-->
            <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
            <recompileMode>incremental</recompileMode><!-- compiles .java as well -->
            <args>
              <arg>-target:jvm-${maven.compiler.target}</arg>
            </args>
            <javacArgs>
              <javacArg>-parameters</javacArg>
              <javacArg>-source</javacArg>
              <javacArg>${maven.compiler.source}</javacArg>
              <javacArg>-target</javacArg>
              <javacArg>${maven.compiler.target}</javacArg>
            </javacArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-at-validate-phase</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>

                  <!-- http://maven.apache.org/enforcer/enforcer-rules/reactorModuleConvergence.html -->
                  <!--<reactorModuleConvergence/>--><!-- doesn't allow module with no parent (e.g. ./bom) -->

                  <!-- http://maven.apache.org/enforcer/enforcer-rules/requireJavaVersion.html -->
                  <requireJavaVersion>
                    <version>[${maven.compiler.source},)</version>
                  </requireJavaVersion>

                  <!-- http://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html -->
                  <requireMavenVersion>
                    <version>3.1.1</version><!-- 3.1.1+ is required by maven-flatten-plugin used for release -->
                  </requireMavenVersion>

                </rules>
              </configuration>
            </execution>
            <execution><!-- these rules require test scope resolution to work correctly (on current reactor build) -->
              <id>enforce-at-test-compile-phase</id>
              <phase>test-compile</phase>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>

                  <!-- http://maven.apache.org/enforcer/enforcer-rules/requireUpperBoundDeps.html -->
                  <requireUpperBoundDeps/>

                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven-plugin-version}</version>
          <executions>
            <execution>
              <goals>
                <goal>helpmojo</goal>
              </goals>
              <phase>process-classes</phase><!-- doesn't see java annotations in default (generate-sources) phase -->
            </execution>
          </executions>
          <configuration>
            <mojoDependencies>
              <mojoDependency>${project.parent.groupId}:epigraph-maven-plugin-common</mojoDependency>
            </mojoDependencies>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.9</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.9.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20</version>
          <configuration>
            <includes>
              <include>**/*Test.class</include>
              <include>**/*Spec.class</include>
            </includes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.3</version><!-- 2.4 is broken: https://github.com/mojohaus/versions-maven-plugin/issues/177 -->
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>

        <plugin>
          <!-- mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent test org.jacoco:jacoco-maven-plugin:report -->
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.9</version>
          <configuration>
            <excludes><!-- use "binary class name" with a `*` suffix, see https://github.com/jacoco/jacoco/issues/34 -->
              <!--<exclude>ws/epigraph/wire/json/reader/ReqUpdateJsonFormatReader*</exclude>-->
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
          <!--<configuration>-->
          <!--<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>-->
          <!--<junitxml>.</junitxml>-->
          <!--<filereports>WDF TestSuite.txt</filereports>-->
          <!--</configuration>-->
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>

    </pluginManagement>

  </build>

  <reporting>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>

    </plugins>
  </reporting>

  <organization>
    <name>Sumo Logic</name>
    <url>https://www.sumologic.com/</url>
  </organization>
  <inceptionYear>2016</inceptionYear>

  <developers>

    <developer>
      <id>konstantin</id>
      <name>Konstantin Sobolev</name>
      <email>konstantin.sobolev@gmail.com</email>
    </developer>

    <developer>
      <id>yegor</id>
      <name>Yegor Borovikov</name>
      <email>yegorb@gmail.com</email>
    </developer>

  </developers>

  <scm>
    <url>https://github.com/SumoLogic/epigraph</url>
    <connection>scm:git:ssh://git@github.com/SumoLogic/epigraph.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/SumoLogic/epigraph.git</developerConnection>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>sumo-snapshots</id>
      <name>Sumo Snapshots</name>
      <url>https://sumologicusw1.artifactoryonline.com/sumologicusw1/libs-snapshot-local/</url>
    </snapshotRepository>
    <repository>
      <id>sumo-releases</id>
      <name>Sumo Snapshots</name>
      <url>https://sumologicusw1.artifactoryonline.com/sumologicusw1/libs-release-local/</url>
    </repository>
  </distributionManagement>

</project>
