<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sumologic.epigraph</groupId>
  <artifactId>epigraph</artifactId>
  <version>0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>Epigraph project</description>
  <url>https://github.com/SumoLogic/epigraph</url>

  <organization>
    <name>Sumo Logic</name>
    <url>https://www.sumologic.com/</url>
  </organization>
  <inceptionYear>2016</inceptionYear>

  <scm>
    <url>https://github.com/SumoLogic/epigraph</url>
    <connection>git@github.com:SumoLogic/epigraph.git</connection>
  </scm>

  <developers>
    <developer>
      <id>konstantin</id>
      <name>Konstantin Sobolev</name>
      <email>konstantin@sumologic.com</email>
    </developer>

    <developer>
      <id>yegor</id>
      <name>Yegor Borovikov</name>
      <email>yegor@sumologic.com</email>
    </developer>
  </developers>

  <modules>
    <module>jar-mavenizer-plugin</module>
  </modules>

  <properties>
    <scala.version.major>2</scala.version.major>
    <scala.version.minor>11</scala.version.minor>
    <scala.version.patch>8</scala.version.patch>
    <scala.version.major.minor>${scala.version.major}.${scala.version.minor}</scala.version.major.minor>
    <scala.version>${scala.version.major.minor}.${scala.version.patch}</scala.version>

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies><!-- common dependencies for all modules -->

  </dependencies>

  <dependencyManagement><!-- sets version for shared child dependencies -->
    <dependencies><!-- maintain alphabetical order; blank line between different group ids -->

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.1.5</version>
      </dependency>

      <dependency>
        <groupId>com.io7m.jpplib</groupId>
        <artifactId>io7m-jpplib-core</artifactId>
        <version>0.7.0</version>
      </dependency>

      <dependency>
        <groupId>com.lihaoyi</groupId>
        <artifactId>pprint_${scala.version.major.minor}</artifactId>
        <version>0.4.1</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging_${scala.version.major.minor}</artifactId>
        <version>3.1.0</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>

      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>ST4</artifactId>
        <version>4.0.8</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-archiver</artifactId>
        <version>3.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>3.3.9</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-project</artifactId>
        <version>2.2.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>3.4</version>
        <!--<scope>provided</scope>-->
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>file-management</artifactId>
        <version>1.2.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity</artifactId>
        <version>1.7</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>15.0</version>
      </dependency>

      <dependency>
        <groupId>org.pegdown</groupId>
        <artifactId>pegdown</artifactId>
        <!-- https://github.com/maiflai/gradle-scalatest/issues/16 don't try to use newer versions -->
        <version>1.1.0</version>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scalameta</groupId>
        <artifactId>scalameta_${scala.version.major.minor}</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.scalameta</groupId>
        <artifactId>trees_${scala.version.major.minor}</artifactId>
        <version>1.0.0</version>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.version.major.minor}</artifactId>
        <version>3.0.0-RC3</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-core</artifactId>
        <version>1.0-groovy-2.4</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <!-- disable surefire plugin tests-->
      <!--<plugin>-->
      <!--<groupId>org.apache.maven.plugins</groupId>-->
      <!--<artifactId>maven-surefire-plugin</artifactId>-->
      <!--<configuration>-->
      <!--<skipTests>true</skipTests>-->
      <!--</configuration>-->
      <!--</plugin>-->

      <!-- enable scalatest plugin -->
      <!--<plugin>-->
      <!--<groupId>org.scalatest</groupId>-->
      <!--<artifactId>scalatest-maven-plugin</artifactId>-->
      <!--</plugin>-->

    </plugins>

    <pluginManagement>

      <plugins>

        <plugin>
          <groupId>com.sumologic.epigraph</groupId>
          <artifactId>epigraph-maven-plugin</artifactId>
          <version>0.0-SNAPSHOT</version>
          <extensions>true</extensions>
        </plugin>

        <plugin>
          <groupId>com.sumologic.epigraph</groupId>
          <artifactId>epigraph-java-maven-plugin</artifactId>
          <version>0.0-SNAPSHOT</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-sources</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.2</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <scalaVersion>${scala.version}</scalaVersion>
            <scalaCompatVersion>${scala.version.major.minor}</scalaCompatVersion>
            <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
            <recompileMode>incremental</recompileMode><!-- compiles .java as well -->
            <args>
              <arg>-target:jvm-${maven.compiler.target}</arg>
            </args>
            <javacArgs>
              <javacArg>-source</javacArg>
              <javacArg>${maven.compiler.source}</javacArg>
              <javacArg>-target</javacArg>
              <javacArg>${maven.compiler.target}</javacArg>
            </javacArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-java</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>[${maven.compiler.source},)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5</version>
          <executions>
            <execution>
              <id>generated-helpmojo</id>
              <goals>
                <goal>helpmojo</goal>
              </goals>
              <phase>process-classes</phase><!-- doesn't see java annotations in default generate-sources phase -->
            </execution>
          </executions>
          <configuration>
            <mojoDependencies></mojoDependencies>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.11</version>
        </plugin>

        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
          <!--<configuration>-->
          <!--<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>-->
          <!--<junitxml>.</junitxml>-->
          <!--<filereports>WDF TestSuite.txt</filereports>-->
          <!--</configuration>-->
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>

    </pluginManagement>

  </build>

  <profiles>
    <!-- mvn clean install -P-default,-schemas && mvn install -P light-psi,-default,-schemas && mvn install -P-schemas && mvn install -->
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>core</module>
        <module>java</module>
        <module>lang-common</module>
        <!--<module>light-psi</module>-->
        <module>maven-plugin</module>
        <module>scala-codegen</module>
        <module>schema-compiler</module>
        <!--<module>idea-plugin</module>-->
        <module>schema-parser</module>
      </modules>
    </profile>

    <profile><!-- specify `-P-schemas` option to deactivate (e.g. if epigraph maven plugins are not available) -->
      <id>schemas</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>builtin-types-schema</module>
        <!--<module>data-schema</module>--><!-- NPE in compiler -->
        <module>java-codegen-test</module>
        <!--<module>operations-schema</module>--><!-- depends on data-schema -->
        <!--<module>projections-schema</module>-->
        <module>scala-codegen-test</module>
        <module>schema-schema</module>
      </modules>
    </profile>

    <profile><!-- specify `-P light-psi` option to activate (e.g. to install light-psi artifact) -->
      <id>light-psi</id>
      <modules>
        <module>light-psi</module>
      </modules>
    </profile>

  </profiles>

</project>
