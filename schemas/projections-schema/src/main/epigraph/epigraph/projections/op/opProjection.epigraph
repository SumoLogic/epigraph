namespace epigraph.projections.op

import epigraph.annotations.Doc
import epigraph.schema.Annotated
import epigraph.schema.DatumType
import epigraph.schema.EnumType
import epigraph.schema.Field
import epigraph.schema.ListType
import epigraph.schema.MapType
import epigraph.schema.PrimitiveType
import epigraph.schema.RecordType
import epigraph.schema.Tag
import epigraph.schema.Type
import epigraph.data.Datum
import epigraph.data.RecordDatum
import epigraph.data.ListDatum
import epigraph.data.MapDatum
import epigraph.data.EnumDatum
import epigraph.data.PrimitiveDatum

record OpEntityProjection {
  type: Type
  flagged: Boolean {
    @Doc "'default' for output, 'required' for input, 'can replace' for replace and 'can delete' for delete projection"
  }
  tagProjections: list[OpTagProjectionEntry]
  polymorphicTail: list[OpEntityProjection]
}

record OpTagProjectionEntry {
  tag: Tag
  `projection`: OpModelProjection
}

abstract record OpModelProjection extends Annotated {
  model: DatumType
  flagged: Boolean {
    @Doc "'default' for output projection, 'required' for input projection"
  }
  defaultValue: Datum
  params: map[String, OpParam]
  `meta`: OpModelProjection
}

record OpRecordModelProjection extends OpModelProjection {
  override model: RecordType
  override defaultValue: RecordDatum
  fieldProjections: map[String, OpFieldProjectionEntry]
}

record OpFieldProjectionEntry {
  field: Field
  `projection`: OpFieldProjection
}

record OpFieldProjection {
//  params: map[String, OpParam]
//  annotations: map[String, Annotation]
  entityProjection: OpEntityProjection
}

record OpMapModelProjection extends OpModelProjection {
  override model: MapType
  override defaultValue: MapDatum
  keyProjection: OpKeyProjection
  itemsProjection: OpEntityProjection
}

record OpKeyProjection extends Annotated {
  `required`: Boolean { @Doc "if `null` - keys are not accepted" }
  params: map[String, OpParam]
  `projection`: OpModelProjection
}

record OpListModelProjection extends OpModelProjection {
  override model: ListType
  override defaultValue: ListDatum
  itemsProjection: OpEntityProjection
}

record OpEnumModelProjection extends OpModelProjection {
  override model: EnumType
  override defaultValue: EnumDatum
}

record OpPrimitiveModelProjection extends OpModelProjection {
  override model: PrimitiveType
  override defaultValue: PrimitiveDatum
}
