namespace epigraph.projections.op

import epigraph.data.Datum
import epigraph.data.EnumDatum
import epigraph.data.ListDatum
import epigraph.data.MapDatum
import epigraph.data.PrimitiveDatum
import epigraph.data.RecordDatum
import epigraph.projections.Annotation
import epigraph.schema.DataTypeRef
import epigraph.schema.EnumTypeRef
import epigraph.schema.FieldRef
import epigraph.schema.ListTypeRef
import epigraph.schema.MapTypeRef
import epigraph.schema.PrimitiveTypeRef
import epigraph.schema.RecordTypeRef
import epigraph.schema.TypeMemberRef
import epigraph.schema.TypeRef

record OpInputVarProjection {
  type: TypeRef
  tagProjections: map[String, OpInputTagProjectionEntry]
  polymorphicTail: list[OpInputVarProjection]
}

record OpInputTagProjectionEntry {
  tag: TypeMemberRef
  projection: OpInputModelProjection // OpInputTagProjection = opInputModelProjection
}

abstract record OpInputModelProjection {
  model: DataTypeRef
  `required`: Boolean
  defaultValue: Datum
  params: map[String, OpParam]
  annotations: map[String, Annotation]
  // `meta`: OpInputModelProjection
}

record OpInputRecordModelProjection extends OpInputModelProjection {
  override model: RecordTypeRef
  override defaultValue: RecordDatum
  fieldProjections: map[String, OpInputFieldProjectionEntry]
}

record OpInputFieldProjectionEntry {
  field: FieldRef
  projection: OpInputFieldProjection
}

record OpInputFieldProjection {
  `required`: Boolean  // artificial, required on field = required on all models
//  params: map[String, OpParam]
//  annotations: map[String, Annotation]
  varProjection: OpInputVarProjection
}

record OpInputListModelProjection extends OpInputModelProjection {
  override model: ListTypeRef
  override defaultValue: ListDatum
  varProjection: OpInputVarProjection
}

record OpInputMapModelProjection extends OpInputModelProjection {
  override model: MapTypeRef
  override defaultValue: MapDatum
  keyProjection: OpInputKeyProjection
  varProjection: OpInputVarProjection
}

record OpInputKeyProjection {
  `required`: Boolean { doc = "if `null` - keys are not accepted" }
  params: map[String, OpParam]
  annotations: map[String, Annotation]
}

record OpInputEnumModelProjection extends OpInputModelProjection {
  override model: EnumTypeRef
  override defaultValue: EnumDatum
}

record OpInputPrimitiveModelProjection extends OpInputModelProjection {
  override model: PrimitiveTypeRef
  override defaultValue: PrimitiveDatum
}
