namespace epigraph.projections.op

import epigraph.annotations.Doc
import epigraph.schema.Annotated
import epigraph.schema.DatumType
import epigraph.schema.EnumType
import epigraph.schema.Field
import epigraph.schema.ListType
import epigraph.schema.MapType
import epigraph.schema.PrimitiveType
import epigraph.schema.RecordType
import epigraph.schema.Tag
import epigraph.schema.Type

record OpOutputVarProjection {
  type: Type
  tagProjections: list[OpOutputTagProjectionEntry]
  polymorphicTail: list[OpOutputVarProjection]
}

record OpOutputTagProjectionEntry {
  tag: Tag
  `projection`: OpOutputModelProjection
}

abstract record OpOutputModelProjection extends Annotated {
  model: DatumType
  params: map[String, OpParam]
  `meta`: OpOutputModelProjection
}

record OpOutputRecordModelProjection extends OpOutputModelProjection {
  override model: RecordType
  fieldProjections: map[String, OpOutputFieldProjectionEntry]
}

record OpOutputFieldProjectionEntry {
  field: Field
  `projection`: OpOutputFieldProjection
}

record OpOutputFieldProjection {
//  params: map[String, OpParam]
//  annotations: map[String, Annotation]
  varProjection: OpOutputVarProjection
}

record OpOutputMapModelProjection extends OpOutputModelProjection {
  override model: MapType
  keyProjection: OpOutputKeyProjection
  varProjection: OpOutputVarProjection
}

record OpOutputKeyProjection extends Annotated {
  `required`: Boolean { @Doc "if `null` - keys are not accepted" }
  params: map[String, OpParam]
  `projection`: OpOutputModelProjection
}

record OpOutputListModelProjection extends OpOutputModelProjection {
  override model: ListType
  varProjection: OpOutputVarProjection
}

record OpOutputEnumModelProjection extends OpOutputModelProjection {
  override model: EnumType
}

record OpOutputPrimitiveModelProjection extends OpOutputModelProjection {
  override model: PrimitiveType
}
