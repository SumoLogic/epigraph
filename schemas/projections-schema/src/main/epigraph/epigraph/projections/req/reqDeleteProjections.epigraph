namespace epigraph.projections.req

/**
 * Request-time projections specifying which parts of the object should be deleted. See operations.epigraph/DeleteOperation
 */

import epigraph.schema.EnumType
import epigraph.schema.Field
import epigraph.schema.ListType
import epigraph.schema.MapType
import epigraph.schema.PrimitiveType
import epigraph.schema.RecordType
import epigraph.schema.Tag
import epigraph.schema.Type
import epigraph.data.Datum
import epigraph.schema.DatumType
import epigraph.annotations.Doc

record ReqDeleteVarProjection {
  type: Type
  tagProjections: map[String, ReqDeleteTagProjectionEntry]
  polymorphicTail: list[ReqDeleteVarProjection]
}

record ReqDeleteTagProjectionEntry {
  tag: Tag
  `projection`: ReqDeleteModelProjection
}

abstract record ReqDeleteModelProjection {
  model: DatumType
  params: map[String, ReqParam]
  directives: map[String, Directive]
}

record ReqDeleteRecordModelProjection extends ReqDeleteModelProjection {
  override model: RecordType
  fieldProjections: list[ReqDeleteFieldProjectionEntry]
}
record ReqDeleteFieldProjectionEntry {
  field: Field
  `projection`: ReqDeleteFieldProjection
}

record ReqDeleteFieldProjection {
  field: Field
  // params: map[String, ReqParam]
  // annotations: map[String, Annotation]
  varProjection: ReqDeleteVarProjection
}

record ReqDeleteListModelProjection extends ReqDeleteModelProjection {
  override model: ListType
  varProjection: ReqDeleteVarProjection
}

record ReqDeleteMapModelProjection extends ReqDeleteModelProjection {
  override model: MapType
  keysProjection: ReqDeleteKeysProjection { @Doc "if `null` - all keys" }
  varProjection: ReqDeleteVarProjection
}

record ReqDeleteKeysProjection {
  keys: list[ReqDeleteKeyProjection]
}

record ReqDeleteKeyProjection {
  value: Datum { @Doc "of appropriate (enclosing map key) type"}
  params: map[String, ReqParam]
  directives: map[String, Directive]
}

record ReqDeleteEnumModelProjection extends ReqDeleteModelProjection {
  override model: EnumType
}

record ReqDeletePrimitiveModelProjection extends ReqDeleteModelProjection {
  override model: PrimitiveType
}
