namespace epigraph.schema

// alternatively this could be designed as two parallel hierarchies of entitys + records
// this allows more clean `supertypes` type, but makes the model twice more complex

abstract record Type extends Named {
  @Doc "Common interface for data type and entity records"

  override name: TypeName

  abstract supertypes: list[Type]

  `abstract`: Boolean { @Doc "Abstract types cannot be instantiated (?)" }
}

record VarType extends Type {
  @Doc "Vartype declaration"

  override name: QualifiedTypeName

  override supertypes: list[VarType]

  tags: list[Tag]
}

record DataType {
  type: Type // todo should be VarType ?

  `retro`: Tag
}

record Tag extends Named {
  @Doc "Vartype member declaration"

  override name: TagName

  type: DatumType
}

record DatumType extends Type {
  @Doc "Model type"

  override supertypes: list[DatumType]

  metaType: DatumType
}

record RecordType extends DatumType {
  override supertypes: list[RecordType]

  override name: QualifiedTypeName

  declaredFields: list[Field]
}

record Field extends Named {
  override name: FieldName

  valueType: DataType
}

record MapType extends DatumType {
  override supertypes: list[MapType]

  keyType: DatumType

  valueType: DataType
}

record AnonMapType extends MapType {
  override name: AnonMapTypeName
}

record ListType extends DatumType {
  override supertypes: list[ListType]

  valueType: DataType
}

record AnonListType extends ListType {
  override name: AnonListTypeName
}

record EnumType extends DatumType {
  override supertypes: list[EnumType]

  override name: QualifiedTypeName

  // TODO? valueType: DataTypeRef

  values: list[EnumValue]
}

record EnumValue extends Named {
  override name: EnumValueName

  // TODO? value: Any??
}

abstract record PrimitiveType extends DatumType {
  override name: QualifiedTypeName

  override abstract supertypes: list[PrimitiveType]
}

record StringType extends PrimitiveType { override supertypes: list[StringType] }

record IntegerType extends PrimitiveType { override supertypes: list[IntegerType] }

record LongType extends PrimitiveType { override supertypes: list[LongType] }

record DoubleType extends PrimitiveType { override supertypes: list[DoubleType] }

record BooleanType extends PrimitiveType { override supertypes: list[BooleanType] }
